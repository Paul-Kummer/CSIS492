USB HID relay stuff for Linux

    git clone https://github.com/pavel-a/usb-relay-hid
    
    //trying to get pavel-a stuff working
        https://github.com/pavel-a/usb-relay-hid/issues/14
    
    //THIS IS THE KEY!!!!
    sudo apt-get install libusb-dev

    //now this can work (with a few warnings we'll ignore
    /usb-relay-hid/commandline/makemake $ make
    
    chmod a+x make_release_linux.sh
    
    ./make_release_linux.sh
    
    //now stuff is in the "release" folder, which is named _rel
    
    /usb-relay-hid/_rel/bin-Linux-x86 $ sudo ./hidusb-relay-cmd on 1
    /usb-relay-hid/_rel/bin-Linux-x86 $ sudo ./hidusb-relay-cmd off 1

    can we remove the sudo need?
        https://github.com/pavel-a/usb-relay-hid/blob/master/commandline/README-hidusb-relay-cmd.txt
            On Linux, this program requires root access by default!
            To grant access to non-root users, define udev rule for the devices:
            Example:
            SUBSYSTEMS=="usb", ATTRS{idVendor}=="16c0", ATTRS{idProduct}=="05df", MODE:="0666" 
        
        ok, went to this dir /etc/udev/rules.d 
        and did this: sudo nano 70-usb-hid-relay.rules
        and gave the new file this content:
            SUBSYSTEMS=="usb", ATTRS{idVendor}=="16c0", ATTRS{idProduct}=="05df", MODE:="0666" 
        then after unplugging/replugging in the usb relay unit, I could run the hidusb-relay-cmd command without sudo.
    
    
    

Image notes (capture image from webcam, convert to bmp):
    --https://superuser.com/questions/1252149/take-webcam-picture-from-shell-with-minimal-delay
    fswebcam --no-banner --png 0 blah.png
    convert blah.png -type truecolor asdf.bmp
    
    


bash script to tie it all together:

    #!/bin/bash
    r1on='./usb-relay-hid/_rel/bin-Linux-x86/hidusb-relay-cmd on 1'
    r1off='./usb-relay-hid/_rel/bin-Linux-x86/hidusb-relay-cmd off 1'
    r2on='./usb-relay-hid/_rel/bin-Linux-x86/hidusb-relay-cmd on 2'
    r2off='./usb-relay-hid/_rel/bin-Linux-x86/hidusb-relay-cmd off 2'
    captureWebcam='fswebcam -q --no-banner --png 0 /tmp/tempAngle.png;convert /tmp/tempAngle.png -type truecolor /tmp/tempAngle.bmp'
    getAngle='paulsGetAngleProgram /tmp/tempAngle.bmp'
    desiredAngle=$1
    
    #eval $captureWebcam
    #currentAngle=$(eval $getAngle)
    currentAngle=39.2
    
    deltaThreshold=0.1
    delta=$(echo "scale=4;$currentAngle-$desiredAngle" | bc)
    absDelta=$(echo "scale=4;sqrt($delta*$delta)" | bc)
    deltaIsWithinThreshold=$(echo "$absDelta < $deltaThreshold" | bc)
    while [ $deltaIsWithinThreshold == 0 ]
    do
        deltaLessThanZero=$(echo "$delta < 0" | bc)
        if [ $deltaLessThanZero == 1 ]
        then
            echo "current angle is $currentAngle. Pushing button to raise"
            eval $r1on
            eval $r1off
        else
            echo "current angle is $currentAngle. Pushing button to lower"
            eval $r2on
            eval $r2off
        fi
        
        #eval $captureWebcam
        #currentAngle=$(eval $getAngle)
        currentAngle=$(echo "$currentAngle+10" | bc)
        
        delta=$(echo "scale=4;$currentAngle-$desiredAngle" | bc)
        absDelta=$(echo "scale=4;sqrt($delta*$delta)" | bc)
        deltaIsWithinThreshold=$(echo "$absDelta < $deltaThreshold" | bc)
    done
        
    
    
    
    
    